pipeline {
    agent any
    stages {
        stage("Build & SonarQube analysis") {
            steps {
                script {
                    def scannerHome = tool 'My SonarQube Scanner'
                    withSonarQubeEnv('sonarqube') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
